#              "Миксины - это классы которые будут использоваться для наследование"
# но от миксинов не создаются обьекты
# 2 Миксины - классы примеси, которые служат для расширение функционала класса

#mixins - от слова микс


# От миксинов нельзя создовать обьекты, поскольку миксины - несамостоятельный классы
#При наследовании миксины должны идти в первую очередь
#(все поля внутри класса атрибутты класса)


class WalkMixin:
    def walk(self):
        print('я могу ходить')

class SwimMixin:
    def swim(self):
        print('я могу плыть')

class FlyMixin:
    def fly(self):
        print('я могу летать')

class Human(WalkMixin):
    name = 'человек'

    def talk(self):
        print('я могу говорить')


class Fish(SwimMixin):
    name = 'рыба'

class Exocoetidae(SwimMixin, FlyMixin):
    name = 'летучая рыба'


class Duck(WalkMixin, SwimMixin, FlyMixin):
    name = 'утка'

# object = [Human(), Fish(), Exocoetidae(), Duck()]   #создали список и закинули туда все классы

# for obj in object:     #проходимся по циклу
#     # print(obj.name)
# # человек
# # рыба
# # летучая рыба
# # утка

#     attrs = ['fly', 'swim', 'walk', 'talk']   #создали список сейчас будем доставать от туда достаем есть ли такой аттрибут
# # есть ли в классах какой либо обьект
#     for attr in attrs:
#         if hasattr(obj, attr):
#             method = getattr(obj, attr)
#             method()

# obj = Human()

# я могу ходить
# я могу говорить
# я могу плыть
# я могу летать
# я могу плыть
# я могу летать
# я могу плыть
# я могу ходить




# obj = Human()
# print(hasattr(obj, 'fly'))  #False
#hasattr - передаем первым аргументом обьект а вторым передаем есть ли атрибут или переменная в этом классе
#(ГРУБО ГОВОРЯ ОН ЗАХОДИТ И ИЩЕТ ЧТО МЫ ПРОПИШЕМ, ПРОВЕРЯЕТ)
# функция которая принимает обьект и название аттрибута. Возврашает True, если у обьекта есть такой аттрибут(метод)





# getattr() - вызываем как функцию, она тоже принимает в себя обьект и метод(название класса) и показывает
# ячейку памяти тоесть где он хранится.
#функция которая принимает обьект и название аттрибута, возвращает значение аттрибута
#например:

# obj = Human()

# print(getattr(obj, 'name'))  #человек
#она достает еще и содержимое

# method = getattr(obj, 'name')
# method()



# obj = Human()
# obj.talk()
# obj.walk()
# obj.swim()
# obj.fly()
# obj.walk()



# obj = Human()
# print(dir(obj))   #'name', 'talk', 'walk']



obj = Human()
setattr(obj, 'new_attribute', 'abracadabra')
print(dir(obj)) #'new_attribute'
print(obj.new_attribute) #abracadabra
 
 
 
 #setattr - позволяет нам создавать новые атрибуты со значением тоесть я создала новый атрибут с названием
 # new_attribute а значение сделала 'abracadabra'
# функция которая принимает обьект, название аттрибута и значение аттрибута, добавляет в обьект новый аттрибут или перезапишет
# одноименный аттрибут

