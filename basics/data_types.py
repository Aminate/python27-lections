# '~~~~~~~~~~~~~Переменные~~~~~~~~~~~~~'
# переменные это ссылки на ячейки памяти где хранятся какие то данные, для дальнейщего использование,при обрашении к нащзванию переменной
# num1 = 5 
# num2 = 10
# print (num1 + num2)# 17
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~'Ввод и вывод данных'~~~~~~~~~~~
# number = input ('введите число:')
# print('введенное число-',number)
# #n input- функция которая позволяет принимать данные с терминала 
# #print - функция которая позволяет выводить данные в терминал




# ~~~~~~~~~~~~~~~~~~~~~ 'Правила наименования переменных~~~~~~~~~~~~~~~~~~'
# a = 5 #можно, но не совсем понятно 
# 1num = 10 так нельзя начинать с чисел
# hello_world = 'hello world ' #для разделителя  можно использовать только _
# print = 'print' # нельзя назвать переменные уже встроенными словами или названиями
#if = 4  не получиться использовать в качестве переменных ключевые слова

# Snake Case- python стиль написания переменных 
# hello_world_aaa_bbb = ''

# Camel Case-стиль написание переменных во всех других яп
# hellooWorldAaaBbb = ''

# ~~~~~~~~~~~~~~~~~~~~~~ТИПЫ ДАННЫХ в pytnon~~~~~~~~~~~~~~~~~~~~~~~~~

# #это неизменяемые типы данных

# int_= любое число 17
# float_ = 34.0
# str_ = "hello "
# bool_1 = True
# bool_2 = false 
# none_ = None
# tuple_ = (1,2,3,4,5,6,7,8,9,10)



# #изменяемые
# list_ = [1,2,3,4,5,6,7,8,9,10] списки
# set_ ={1,2,1,2,4} #{1,2,4}     
# dict_ = {'a':1,  'b':2, 'c':3,}
# git - система в котором мы можем изменять наши действия
# git add .    -добавляет все файлы для отслеживания изменений
# git commit -m 'text'    -записывает все изменения
# git push ssh-link master.   -закидывает в гитхаб все изменения



#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# к любой команде можно дописать - -help и выйдет  описание как ИСПОЛЬЗОВАТЬ эту команду
# cd test    -переходим в папку test (если это папка и она существует)
# cd ..      -переход в родительскую папку (переход назад в предыдущую папку)
# cd .       -переход в эту же папку (мы некуда не переходим)
# cd     - переход в домашнюю папку (`)
# cd ~.   переход в домашнюю папку. 
# pwd      -показывает абсолютный путь до текущей папки
# mkdir  python27  -создание папки
# mkdir python27/new_dir -создание новой папки new_dir в уже существующей папке python27
# touth text.txt- создание файла text.txt
# rm     -удаление файла
# rm -rf python27 -удаление папки со всем ее содержимым
# !!!!! НИКОГДА НЕ ИСПОЛЬЗОВАТЬ -sudo rm-rf
# cat       смотреть содержимое файла 
# Ls    -просмотр всех файлов и папок внутри папки python27
# Ls -a    -просмотр всех файлов и папок внутри папки python27 включая скрытые 
# Ls -l j   -просмотр всех файлов и папок с более подробной информацией 

# для терминала:
# nano python27 открыть файл в редакторе nano
# чтобы сохранить (ctrl s)
# чтобы выйти (ctrl x)


